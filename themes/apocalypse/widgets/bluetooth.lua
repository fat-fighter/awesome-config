-- =====================================================================================
--   Name:       bluetooth.lua
--   Author:     Gurpreet Singh
--   Url:        https://github.com/ffs97/awesome-config/themes/apocalypse/widgets ...
--               ... bluetooth.lua
--   License:    The MIT License (MIT)
--
--   Custom theme based bluetooth widget
-- =====================================================================================

local awful = require("awful")
local gears = require("gears")
local wibox = require("wibox")
local beautiful = require("beautiful").controlpanel.bluetooth

-- -------------------------------------------------------------------------------------
-- Including Custom Helper Libraries

local helpers = require("helpers")
-- local bluetooth_daemon = require("daemons.bluetooth")

-- -------------------------------------------------------------------------------------
-- Creating the Wifi Widget

-- local bluetooth_icon = wibox.widget {
--     image = beautiful.icon_off,
--     resize = true,
--     forced_width = beautiful.icon_size,
--     forced_height = beautiful.icon_size,
--     widget = wibox.widget.imagebox
-- }
--
-- local bluetooth = wibox.widget {
--     bg = beautiful.bg.off,
--     shape = gears.shape.circle,
--     forced_width = beautiful.width,
--     forced_height = beautiful.height,
--     shape_border_color = beautiful.border_color_off,
--     shape_border_width = beautiful.border_width,
--     widget = wibox.container.background
-- }
--
-- local centered = helpers.centered
-- bluetooth:setup {
--     nil,
--     centered(bluetooth_icon, "horizontal"),
--     nil,
--     expand = "none",
--     layout = wibox.layout.align.vertical
-- }
--
-- if beautiful.bg.hover then
--     local bg = bluetooth.bg
--     helpers.add_clickable_effect(
--         bluetooth,
--         function()
--             bg = bluetooth.bg
--             bluetooth.bg = beautiful.bg.hover
--         end,
--         function()
--             bluetooth.bg = bg
--         end
--     )
-- end
--
-- -- -------------------------------------------------------------------------------------
-- -- Adding Startup and Update Functions to Update Widget on Wifi Status Change
--
-- local function update_widget(line)
--     local property = line:match("[^%s]+ ="):sub(1, -3):lower()
--     local status = line:match("= .*$"):sub(3, -1):lower()
--
--     if property == "powered" then
--         if status == "false" then
--             bluetooth.bg = beautiful.bg.off
--             bluetooth.enabled = false
--             bluetooth_icon.image = beautiful.icon_off
--             bluetooth.shape_border_color = beautiful.border_color_off
--         else
--             bluetooth.bg = beautiful.bg.on
--             bluetooth.enabled = true
--             bluetooth_icon.image = beautiful.icon_on
--             bluetooth.shape_border_color = beautiful.border_color_on
--         end
--     elseif property == "connected" then
--         if status == "false" then
--             bluetooth.bg = beautiful.bg.on
--         else
--             bluetooth.bg = beautiful.bg.conn
--         end
--     end
-- end
--
-- awesome.connect_signal("properties::bluetooth", update_widget)
--
-- gears.timer.delayed_call(
--     function()
--         bluetooth_daemon.emit()
--         if not bluetooth_daemon.is_running then
--             bluetooth_daemon.run()
--         end
--     end
-- )
--
-- -- -------------------------------------------------------------------------------------
-- -- Adding Button Controls to the Widget
--
-- bluetooth:buttons(
--     gears.table.join(
--         -- Left Click - Stop Timer
--         awful.button({}, 1, function()
--             if bluetooth.enabled then
--                 awful.spawn.with_shell("bluetoothctl power off")
--             else
--                 awful.spawn.with_shell("bluetoothctl power on")
--             end
--         end),
--         awful.button({}, 3, function()
--             awful.spawn("blueman-manager")
--         end)
--     )
-- )

-- -------------------------------------------------------------------------------------
return helpers.empty_widget
